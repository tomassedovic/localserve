#!/usr/bin/python

# (c) 2012, Tomas Sedovic <tomas@sedovic.cz>. Licensed under 2-clause BSD.

'''Serves the current directory contents over HTTP.

Usage: localserve [port]

If you don't specify the port, 8000 will be used.
'''

import sys, socket


def last_exception_message():
    """
    Return the message of the most recently raised exception.

    This is useful for compatibility with Python < 2.6. These older version
    didn't receive backport of the 3.x syntax for binding exception objects.
    """
    exc_value = sys.exc_info()[1]
    if exc_value and len(exc_value.args):
        return exc_value.args[1]

def start_server():
    try:
        import SimpleHTTPServer  # Python 2
        SimpleHTTPServer.test()
    except ImportError:
        import http.server  # Python 3
        http.server.test(HandlerClass=http.server.SimpleHTTPRequestHandler)


if __name__ == '__main__':
    if len(sys.argv) > 1 and sys.argv[1] in ['-h', '--help']:
        print(__doc__)
        sys.exit(0)

    try:
        start_server()
    except socket.error:
        sys.stderr.write('Error: ' + last_exception_message() + '\n')
        sys.exit(1)
    except KeyboardInterrupt:
        pass
